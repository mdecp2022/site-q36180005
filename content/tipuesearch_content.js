var tipuesearch = {"pages": [{'title': 'About', 'text': 'cmsite: wcms use  https://github.com/mdecycu/cmsimde  as submodule \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'w1', 'text': 'github我愛你-老師我愛你-github萬歲', 'tags': '', 'url': 'w1.html'}, {'title': 'w2', 'text': '老師不要當我please~', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '如何將動態同步到靜態?A:在動態裡面更新新的東西後，按下save然後再按generate_pages，畫面顯示已同步到靜態網站之後，到replit裡面左方tool區下有一個git，點進入之後便在空白格填入這次動態轉靜態同步了甚麼東西，完成後按下Commit All&Push後github裡面的code頁面標題上將會顯示剛剛在git輸入的字，並且有一個橘色圓點，點下去後再點下方detail，頁面會呈現載入中的文字列，等它全部載入完成後便會由橘色圓點變成綠色打勾，再去github的page進入靜態網站，更新的東西就成功同步了，搞定!(這只是我認為的而已，老師不要當我)', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '', 'tags': '', 'url': 'w4.html'}, {'title': 'cp抽點', 'text': '抽點 \n \n', 'tags': '', 'url': 'cp抽點.html'}, {'title': 'w5', 'text': '\n 第五周重要的知識: \n \n 雲端動態網站平台分為 Replit 與 stud.cycu.org, 而近端則可使用 localhost 加上 SSH 設定執行動態網站, 改版後以 acp.bat 推送至 Github 靜態網頁倉儲. \n 近端使用 localhost 執行個人倉儲動態網站時 (啟用可攜 Python 時, 確認已經設定 GIT_SSH 變數, 且與 plink.exe 對應): \n \n 利用 git config --global http.proxy " http://p42.cycu.org:3128",  設定讓 git 指令使用 Proxy 連線到 github.com \n 利用 git config --global user.name "使用者 Github 帳號", 設定 git 提交所使用的 user.name \n 利用 git config --global user.email "使用者 Github 帳號設定時所填入的 email", 設定提交者身分 (一定要設定正確, 否則提交無法正確註記) \n 利用 puttygen.exe 建立 public key 與 private key, public key 送到 Github, private key 存入 USB 隨身碟. \n 利用 putty.exe 設定 session (名稱可自取), 代表以 ssh 連線至 github.com, 設定 http 協定之 Proxy, 給定 private key 位置, 且設定完成之 .reg 從 registry 匯出存入 USB 隨身碟, 之後可以直接雙點擊後完成 putty session 的登錄檔設定. (session 設定完成要 connect 確定可以連線) \n 使用 git clone --recurse-submodules git@your_github_session:mdecp2022/site-your_github_account.git 在 site-your_github_account 目錄中取下個人倉儲資料. \n cd 至個人倉儲目錄, 以 cms 執行動態網站, 並以 init.py 中的 site_title 作為網站標題, dynamic_port 以及 static_port 作為動態網站與靜態模擬網站的埠號. \n 學習如何在  https://localhost:9443  或其他設定在 init.py 中的 dynamic_port 埠號網站中編輯網頁內容. \n 完成動態網站的階段性編輯後, 以 generate_pages 將網站轉為靜態資料後, 在倉儲根目錄中執行 acp "提交說明字串" 後, 即可憑藉 SSH 的設定, 將改版內容提交推送到 Github 個人倉儲區. \n \n w5 將一步步讓學員完成上述實習內容後, 再設法運用 stud.cycu.org 上的動態網站進行改版. \n \n 另外, 在個人倉儲對應網站上執行的 Brython 程式練習後, 可以將程式存入個人 Github 帳號下的 Gist 區後, 導入個人的動態或靜態網頁中執行. \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': 'w6作業 \n 心得:from browser import document, html brython_div1 = document["brython_div1"] """ brython_div1 <= html.BUTTON("hello") brython_div1 <= html.BR() brython_div1 <= html.A("google", href="https://google.com") """ url = "https://mde.tw/studlist/2022fall/1a.txt" data = open(url).read().split("\\n") mdecp2022 = "https://mdecp2022.github.io/site-" data = data[1:-1] for i in data: \xa0\xa0\xa0 stud = i.split("\\t") \xa0\xa0\xa0 stud_num = stud[0] \xa0\xa0\xa0 github_acc = stud[1] \xa0\xa0\xa0 #print(stud_num, github_acc) \xa0\xa0\xa0 if github_acc == "": \xa0\xa0\xa0\xa0\xa0\xa0\xa0 github_acc = stud_num \xa0\xa0\xa0 site = mdecp2022 + github_acc \xa0\xa0\xa0 link = html.A(stud_num, href=site) \xa0\xa0\xa0 brython_div1 <= link \xa0\xa0\xa0 brython_div1 <= html.BR() \n 字串第六行後面的1a.txt是把1a所有學員的靜態網站連結都整理再一起,如果改成1b,那就是把1b所有學員的靜態網站連結都整理出來,想要看哪一個學員的靜態網站,只要點連結進去就能檢視', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '\n 重要的: \n \n stud 伺服器與 cmsimde 子模組更新 \n \n \n \n \n https://stud.cycu.org:8000  是一個建立在工作站室電腦上的一個動態網站 ， 透過在 Ubuntu 伺服器上的一個 demo 帳號與兩個 ports (9000 及 8000) 完成 ， 2022 Fall 每位修課學員應該都收到一封信 ， 告知在這台 stud.cycu.org 伺服器上的獨一帳號密碼與 ports ( stud.cycu.org port 分配表) \xa0 ， 其中 9xxx 用於內部而 8xxx 則用於外部. \n stud.cycu.org 是用來取代 Replit 雲端應用程式服務 ， 設定完成後 ， 每位學員都能直接在瀏覽器中修改動態與 Github Pages 靜態網站的內容 ， 也能直接將各種練習編寫的 Brython 程式存在個人的 Gist ， 然後導入動態或靜態網站中執行. \n \n \n \n \n \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '利用putty.exe遠端登入到stud.cycu.org \n 教學影片連結: 點我進入 ! \n 如何設定stud主機上的ssh與http代理主機 ，並正確git clone個人倉儲 \n 教學影片連結: 點我進入! \n (1a) stud.cycu.org從建立keys 到python3 server.py過程 \n 教學影片連結: 點我進入! \n https://exam.cycu.org/ \xa0這個連結是考試的網站 ，網站名稱叫做TecExam，老師不要當我!', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '是期中考試 ，考試網站當然是這個: 點我進入!', 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': 'w10-1作業 \n \n 利用 Python 或 Brython 讀取  JSON  檔案: \n 1b w10 小考結果 為  JSON  檔案格式 ， 請各小組編寫程式處理這個檔案資料 ， 並回答下列問題: \n 1) 請問是否能夠以此 小考結果檔案 作為輸入 ， 直接列出該班缺考人員學號? \n 2) 承上, 若將缺考者得分視為 0 分 ， 是否可以列出以該班選課人員學號作為第一欄資料 ， 而第二欄位則為本次考試的成績? \n \n w10-1-ex \n \n 心得:\n 1) 請問是否能夠以此 小考結果檔案 作為輸入 ， 直接列出該班缺考人員學號? \n A:可以的 \n 2) 承上, 若將缺考者得分視為 0 分 ， 是否可以列出以該班選課人員學號作為第一欄資料 ， 而第二欄位則為本次考試的成績? \n A:可以的 \n \n \n \n w10-2作業 \n \n a = ""  for i in range(1, 10, 1):  a + str(i) + ","  print(a) \n \n \n \n # 1, 3, 5, 7, 9 \n 如何修改上列程式, 可以輸出 1, 3, 5, 7, 9 \n \n 心得:range()用來創建一個整數序列 ，括號裡面 (起始值,終止值,遞增(減)值)意思是假如用range(10)那就代表產生從0到九的整數序列 ，而用range(1,10,2)則代表產生從1,3,5,7,9的整數序列(遞增值為2)，用for迴圈以固定數量的變數作為控制條件的依據，而利用range() 函式，可以很方便的建立出一個整數序列，讓程式依照序列裡的數值來執行迴圈裡的內容，應該是這樣啦，老師不要當我! \n \n \n \n w10-2-ex', 'tags': '', 'url': 'w10.html'}, {'title': 'w11', 'text': '利用 Brython 在網頁畫圖: \n 心得:繪圖區將作出一個15x15的正方形表格 ，每格為(1,1) \n w11-ex', 'tags': '', 'url': 'w11.html'}, {'title': 'w12', 'text': '', 'tags': '', 'url': 'w12.html'}, {'title': 'w13', 'text': '心得:今天教的是攝氏溫度 ，早上的時候不會做還呼叫老師支援，做到中午十二點多才做完，這是我第一份成功同步到靜態的功課，老師我愛你 \n ex2', 'tags': '', 'url': 'w13.html'}, {'title': 'w15', 'text': '1.為何學習計算機程式需要建立個人倉儲? \n A:自己就能夠設立一個專屬網站,感覺很專業很鬼。\xa0 \n 2.全球資訊網能夠提供甚麼功能或有什麼優點? \n A: 全球資訊網 （英語： World Wide Web ）亦作 WWW 、 Web 、 全球廣域網路 ，是一個透過 網際網路 存取的，由許多互相連結的 超文字 組成的 資訊系統。\xa0 網頁 主要是文字檔案 格式化 和 超文件標示語言 （HTML）。除了格式化文字之外，網頁還可能包含 圖片 、 影片 、 聲音 和軟體元件，這些元件會在使用者的網頁瀏覽器中呈現為 多媒體 內容的連貫頁面。 \n 3.Replit, stud.cycu.org 與 localhost 分別代表甚麼? \n A:(1) Replit  是提供線上 集成開發環境 服務的公司，他們現有10名全職雇員，提供超過50種程式語言的在線編譯服務 ,每周活躍在該平台上的開發者數量超過20萬。 \n \xa0\xa0 (2)stud.cycu.org為雲端動態網站平台 \n \xa0\xa0 (3)在 計算機網路 中，localhost（意為“本地主機”，指“這台計算機”）是給迴路網路接口（ loopback ）的一個標準 主機名 ，相對應的IP位址為127.0.0.1（ IPv4 ）和[::1]（ IPv6 ）。 \n 4.https, ssh 到底提供使用者那些功能或優點? \n A:(1)HTTPS (HyperText Transfer Protocol Secure，超文本傳輸安全通訊協定) 是一種網際網路通訊協定，可確保資料在使用者的電腦和網站之間傳輸時，保有完整性和機密性。 \n \xa0\xa0 (2) SSH 全名是 Secure Shell (安全外殼協定)，是一種加密的網路傳輸協定，可以在不安全的網路中提供安全的網路傳輸環境。SSH 透過在使用者和客戶端之間建立一條安全的隧道來實現連接，並進行資料的傳輸。 \n 5.Brython 與 Python 有甚麼差別? \n A:入門建議使用Brython \n 6.能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼? \n A:Brython超強的,太酷了吧 \n 7. 變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼? \n A:聽起來很專業的專業術語 \n', 'tags': '', 'url': 'w15.html'}, {'title': 'w15_綠色方格', 'text': 'ex1 \n 綠色方塊程式心得: \n 讓綠色方塊從 (1, 1) 出發, 向右行走至 (8, 1) 之後, 轉向下行走, 至底部之後向右行走至右方邊界 (15, 15) 之後, 轉而向上行走至 (15, 8) 之後向左走至左邊界後向上行走至 (1, 1) 後, 依照上述路徑重複執行. \n 底下的指令是控制方塊上下左右行走的指令,if nowx,y代表假如x跟y在某個座標上,那麼我就命令方格stepx,y去1格1格的走,如果座標x要變動y不變動,那麼stepx就要打1(代表我要1格1格慢慢走),stepy則打0(代表我不走,原地踏步),這就是方塊行走的秘密~(應該拉) \n # 繞著外圍行走 def walk(): \xa0\xa0\xa0 global stepx, stepy \xa0\xa0\xa0\xa0 # 向右 \xa0\xa0\xa0 if nowx == 1 and nowy == 1: \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepx = 1 \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepy = 0 \xa0\xa0\xa0 # 向下 \xa0\xa0\xa0 elif nowy == 1 and nowx == 8: \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepx = 0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepy = 1 \xa0\xa0\xa0 # 向右 \xa0\xa0\xa0 elif nowy == 15 and nowx == 8: \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepx = 1 \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepy = 0 \xa0\xa0\xa0 # 向上 \xa0\xa0\xa0 elif nowx == 15 and nowy == 15: \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepx = 0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepy = -1 \xa0\xa0\xa0 # 向左 \xa0\xa0\xa0 elif nowy == 8 and nowx == 15: \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepx = -1 \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepy = 0 \xa0\xa0\xa0 # 向上 \xa0\xa0\xa0 elif nowy == 8 and nowx == 1: \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepx = 0 \xa0\xa0\xa0\xa0\xa0\xa0\xa0 stepy = -1', 'tags': '', 'url': 'w15_綠色方格.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation \n Variables \n Comments \n Numbers \n Strings \n print \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n \n import   random \n \n url  =   "https://nfu.cycu.org/?semester=1111&courseno="   +   cp1a  +   "&column=True" \n \n data  =   open (url).read().split( "\\n" ) \n print(data[:-1]) \n \n \n random.shuffle( data[:-1] ) \n num  =   5 \n \n for   i  in   range (num): \n \xa0\xa0\xa0\xa0 print (stud[i]) \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束 ', 'tags': '', 'url': 'Brython.html'}]};